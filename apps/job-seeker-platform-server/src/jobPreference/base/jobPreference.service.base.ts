/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, JobPreference as PrismaJobPreference } from "@prisma/client";

export class JobPreferenceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.JobPreferenceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.jobPreference.count(args);
  }

  async jobPreferences(
    args: Prisma.JobPreferenceFindManyArgs
  ): Promise<PrismaJobPreference[]> {
    return this.prisma.jobPreference.findMany(args);
  }
  async jobPreference(
    args: Prisma.JobPreferenceFindUniqueArgs
  ): Promise<PrismaJobPreference | null> {
    return this.prisma.jobPreference.findUnique(args);
  }
  async createJobPreference(
    args: Prisma.JobPreferenceCreateArgs
  ): Promise<PrismaJobPreference> {
    return this.prisma.jobPreference.create(args);
  }
  async updateJobPreference(
    args: Prisma.JobPreferenceUpdateArgs
  ): Promise<PrismaJobPreference> {
    return this.prisma.jobPreference.update(args);
  }
  async deleteJobPreference(
    args: Prisma.JobPreferenceDeleteArgs
  ): Promise<PrismaJobPreference> {
    return this.prisma.jobPreference.delete(args);
  }
}
